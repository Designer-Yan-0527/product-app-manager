<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>APPM_STAT_script</Name>
<Script>

<!--APM Request Summery Data Manupulation-->
create temporary table AppRequestSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "API_REQUEST_SUMMARY",
	schema "api string, 
		api_version string, 
		version string,
		trackingCode string, 
		referer string,
		apiPublisher string,
		userId string, 
		context string,
		max_request_time long, 
		total_request_count INTEGER, 
		hostName string,
	 	year INTEGER, 
		month INTEGER, 
		day INTEGER, 
		time string");

create temporary table AppRequestData USING CarbonAnalytics OPTIONS(tableName "ORG_WSO2_APPMGT_STATISTICS_REQUEST",
	schema "context string,
		api_version string, 
		api string, 
		resource string,
		method string, 
		version string,
                request int,
                requestTime long,
                userId string,
                tenantDomain string,
                hostName string,
		apiPublisher string,
                applicationName string,
                applicationId string,
                trackingCode string,
                referer string,
                serviceTimeOfPage long"
);  

CREATE TEMPORARY TABLE APPM_REQUEST_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQUEST_SUMMARY",                           
 	schema "api string, 
		api_version string, 
		version string,
		trackingCode string, 
		referer string,
		apiPublisher string,
		userId string, 
		context string,
		max_request_time long, 
		total_request_count int, 
		hostName string,
	 	year int, 
		month int, 
		day int, 
		time string
",
  	primaryKeys "api,api_version,version,trackingCode,referer,userId,context,hostName,year,month,day", mergeSchema "true"
); 

insert into table APPM_REQUEST_SUMMARY_FINAL select 
		api, 
		api_version,
		version, 
		trackingCode, 
		referer, 
		apiPublisher, 
		userId,
		context,
		max(requestTime) as max_request_time,
		sum(request) as total_request_count,
		hostName, 

		substring(cast(first(requestTime)/1000 as timestamp),0,4),
		substring(cast(first(requestTime)/1000 as timestamp),6,2),
		substring(cast(first(requestTime)/1000 as timestamp),9,2),
		substring(cast(first(requestTime)/1000 as timestamp),0,16) 

	from AppRequestData where context is not NULL group by api, api_version, version, trackingCode, referer, apiPublisher, userId, context, hostName, 
		substring(cast(requestTime/1000 as timestamp),0,4), 
		substring(cast(requestTime/1000 as timestamp),6,2),
		substring(cast(requestTime/1000 as timestamp),9,2);   
                            
INSERT INTO TABLE AppRequestSummaryData SELECT api, api_version, version, trackingCode, referer, apiPublisher, userId, context, max_request_time, total_request_count, hostName, year, month, day, time FROM APPM_REQUEST_SUMMARY_FINAL;                           
                            

<!--API Usage Summery Data Manupulation-->

create temporary table AppVersionUsageSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "API_VERSION_USAGE_SUMMARY",
	schema "api string,
		version string,
		apiPublisher string,
		context string,
		trackingCode string,
		total_request_count INTEGER,
		hostName string, 
		year INTEGER, 
		month INTEGER, 
		day INTEGER, 
		time string",
	  primaryKeys "api,version,apiPublisher,context,hostName,time");

CREATE TEMPORARY TABLE API_VERSION_USAGE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_VERSION_USAGE_SUMMARY",                           
	schema "api string,
		version string,
		apiPublisher string,
		context string,
		trackingCode string,
		total_request_count int,
		hostName string, 
		year int, 
		month int, 
		day int, 
		time string",
	  primaryKeys "api,version,apiPublisher,context,hostName,time",mergeSchema "true"
);

insert into table API_VERSION_USAGE_SUMMARY_FINAL select api,version,apiPublisher,context,trackingCode,sum(request) as total_request_count,hostName,

		substring(cast(first(requestTime)/1000 as timestamp),0,4),
		substring(cast(first(requestTime)/1000 as timestamp),6,2),
		substring(cast(first(requestTime)/1000 as timestamp),9,2),
		substring(cast(first(requestTime)/1000 as timestamp),0,16)

from AppRequestData where  context is not NULL group by api,version,apiPublisher,context,trackingCode,hostName,

substring(cast(requestTime/1000 as timestamp),0,4), 
substring(cast(requestTime/1000 as timestamp),6,2),
substring(cast(requestTime/1000 as timestamp),9,2);

INSERT INTO TABLE AppVersionUsageSummaryData SELECT api,version,apiPublisher,context,trackingCode,total_request_count,hostName,year,month,day,time FROM API_VERSION_USAGE_SUMMARY_FINAL;     


<!--API Response Summery Data Manupulation-->

create temporary table AppResponseSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "API_RESPONSE_SUMMARY",
	schema "api string,
		version string,
		api_version string,
		apiPublisher string,
		context string,
		trackingCode string,
		referer string,
		hostName string,
		serviceTime long");

CREATE TEMPORARY TABLE API_RESPONSE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_RESPONSE_SUMMARY",                           
	schema "api string,
		version string,
		api_version string,
		apiPublisher string,
		context string,
		trackingCode string,
		referer string,
		hostName string,
		serviceTime long",
  primaryKeys "api,version,api_version,apiPublisher,context,hostName,referer",mergeSchema "true"
);

insert into table API_RESPONSE_SUMMARY_FINAL select 
api,version,api_version,apiPublisher,context,trackingCode,referer,hostName,avg(serviceTimeOfPage) as serviceTime  from AppRequestData  group by api,version,api_version,apiPublisher,context,trackingCode,referer,hostName;
                                      
INSERT INTO TABLE AppResponseSummaryData SELECT api,version,api_version,apiPublisher,context,trackingCode,referer,hostName,serviceTime FROM API_RESPONSE_SUMMARY_FINAL;


<!--APM HIT TOTAL Data Manupulation-->

create temporary table  ApmAppHits using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "APM_APP_HITS",
	schema "uuid string,
		app_name string,
		version string,
		context string,
		user_id string,
		tenant_id string,
		hit_time string"	
);

create temporary table ApmAppHitsData USING CarbonAnalytics OPTIONS(tableName "ORG_WSO2_APPMGT_BAM_UIACTIVITYPUBLISH",
	schema "uuid string,
		user_id string,
		item string,
		action string,
		hit_time string,
		tenant_id int,
		app_name string,
		version string,
		context string"
);

CREATE TEMPORARY TABLE APM_APP_HITS_FINAL USING CarbonAnalytics OPTIONS (tableName "APM_APP_HITS",
	schema "uuid string,
		app_name string,
		version string,
		context string,
		user_id string,
		tenant_id string,
		hit_time string",
		primaryKeys "uuid,app_name,version,context,user_id,tenant_id,hit_time",mergeSchema "true"
);

insert into table APM_APP_HITS_FINAL select uuid,app_name,version,context,user_id,tenant_id,hit_time from ApmAppHitsData group by uuid,app_name,version,context,user_id,tenant_id,hit_time;

INSERT OVERWRITE TABLE ApmAppHits SELECT uuid,app_name,version,context,user_id,tenant_id,hit_time FROM APM_APP_HITS_FINAL;

                                                  
</Script>
    <CronExpression>0 0/2 * 1/1 * ? *</CronExpression>
</Analytics> 
