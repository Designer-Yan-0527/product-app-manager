<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>APPM_STAT_script</Name>
<Script>

<!--APM Request Summery Data Manupulation-->

create temporary table AppRequestSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "API_REQUEST_SUMMARY");

create temporary table AppRequestData USING CarbonAnalytics OPTIONS(tableName "ORG_WSO2_APPMGT_STATISTICS_REQUEST");  

CREATE TEMPORARY TABLE APPM_REQUEST_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQUEST_SUMMARY",                           
 	schema "api string, 
		api_version string, 
		version string,
		trackingCode string, 
		referer string,
		apiPublisher string,
		userId string, 
		context string,
		max_request_time long, 
		total_request_count int, 
		hostName string,
	 	year int, 
		month int, 
		day int, 
		time string
",
  	primaryKeys "api,api_version,version,trackingCode,referer,userId,context,hostName,year,month,day"
); 

insert into table APPM_REQUEST_SUMMARY_FINAL select 
		api, 
		api_version,
		version, 
		trackingCode, 
		referer, 
		apiPublisher, 
		userId,
		context,
		max(requestTime) as max_request_time,
		sum(request) as total_request_count,
		hostName, 

		substring(cast(first(requestTime)/1000 as timestamp),0,4),
		substring(cast(first(requestTime)/1000 as timestamp),6,2),
		substring(cast(first(requestTime)/1000 as timestamp),9,2),
		substring(cast(first(requestTime)/1000 as timestamp),0,16) 

	from AppRequestData where context is not NULL group by api, api_version, version, trackingCode, referer, apiPublisher, userId, context, hostName, 
		substring(cast(requestTime/1000 as timestamp),0,4), 
		substring(cast(requestTime/1000 as timestamp),6,2),
		substring(cast(requestTime/1000 as timestamp),9,2);   
                            
INSERT OVERWRITE TABLE AppRequestSummaryData SELECT * FROM APPM_REQUEST_SUMMARY_FINAL;                            
                            

<!--API Usage Summery Data Manupulation-->

create temporary table AppVersionUsageSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "API_VERSION_USAGE_SUMMARY");

CREATE TEMPORARY TABLE API_VERSION_USAGE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_VERSION_USAGE_SUMMARY",                           
	schema "api string,
		version string,
		apiPublisher string,
		context string,
		trackingCode string,
		total_request_count int,
		hostName string, 
		year int, 
		month int, 
		day int, 
		time string",
	  primaryKeys "api,version,apiPublisher,context,hostName,time"
);

insert into table API_VERSION_USAGE_SUMMARY_FINAL select api,version,apiPublisher,context,trackingCode,sum(request) as total_request_count,hostName,

		substring(cast(first(requestTime)/1000 as timestamp),0,4),
		substring(cast(first(requestTime)/1000 as timestamp),6,2),
		substring(cast(first(requestTime)/1000 as timestamp),9,2),
		substring(cast(first(requestTime)/1000 as timestamp),0,16)

from AppRequestData where  context is not NULL group by api,version,apiPublisher,context,trackingCode,hostName,

substring(cast(requestTime/1000 as timestamp),0,4), 
substring(cast(requestTime/1000 as timestamp),6,2),
substring(cast(requestTime/1000 as timestamp),9,2);

INSERT OVERWRITE TABLE AppVersionUsageSummaryData SELECT * FROM API_VERSION_USAGE_SUMMARY_FINAL;                            


<!--API Response Summery Data Manupulation-->

create temporary table AppResponseSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "API_RESPONSE_SUMMARY");

CREATE TEMPORARY TABLE API_RESPONSE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_RESPONSE_SUMMARY",                           
	schema "api string,
		version string,
		api_version string,
		apiPublisher string,
		context string,
		trackingCode string,
		referer string,
		hostName string,
		serviceTime long",
  primaryKeys "api,version,api_version,apiPublisher,context,hostName,referer"
);

insert into table API_RESPONSE_SUMMARY_FINAL select 
api,version,api_version,apiPublisher,context,trackingCode,referer,hostName,avg(serviceTimeOfPage) as serviceTime  from AppRequestData  group by api,version,api_version,apiPublisher,context,trackingCode,referer,hostName;
                                      
INSERT OVERWRITE TABLE AppResponseSummaryData SELECT * FROM API_RESPONSE_SUMMARY_FINAL;                              


<!--APM HIT TOTAL Data Manupulation-->    

create temporary table  ApmAppHits using CarbonJDBC options (dataSource "WSO2AM_STATS_DB", tableName "APM_APP_HITS");

create temporary table ApmAppHitsData USING CarbonAnalytics OPTIONS(tableName "ORG_WSO2_APPMGT_BAM_UIACTIVITYPUBLISH");

CREATE TEMPORARY TABLE APM_APP_HITS_FINAL USING CarbonAnalytics OPTIONS (tableName "APM_APP_HITS",                           
	schema "uuid string,
		app_name string,
		version string,
		context string,
		user_id string,
		tenant_id string,
		hit_time long",
  primaryKeys "appId,appName,appVersion,context,userId,tenantId"
);

insert into table APM_APP_HITS_FINAL select appId,appName,appVersion,context,userId,tenantId,first(timestamp) from ApmAppHitsData group by appId,appName,appVersion,context,userId,tenantId;                    

INSERT OVERWRITE TABLE ApmAppHits SELECT * FROM APM_APP_HITS_FINAL;

                                                  
</Script>
    <CronExpression>0 0/5 * 1/1 * ? *</CronExpression>
</Analytics> 
